digraph {

	ordering=out;
	ranksep=.4;
	bgcolor="lightgrey";  node [shape=box, fixedsize=false, fontsize=12, fontname="Helvetica-bold", fontcolor="blue"
	width=.25, height=.25, color="black", fillcolor="white", style="filled, solid, bold"];

	edge [arrowsize=.5, color="black", style="bold"]

	n0x728c54c35ee8[label="SOURCE"]
	n0x728c54c32a80[label="SOURCE_ITEM"]
	n0x728c54c32948[label="FUNC_DEF"]
	n0x728c54c31be0[label="FUNC_SIG"]
	n0x728c54c31970[label="alpha"]
	n0x728c54c31aa8[label="LIST_ARG"]
	n0x728c54c31e50[label="bool"]
	n0x728c54c326d8[label="="]
	n0x728c54c32468[label="x"]
	n0x728c54c32810[label="2"]
	n0x728c54c35c78[label="SOURCE_ITEM"]
	n0x728c54c34dd8[label="FUNC_DEF"]
	n0x728c54c32cf0[label="FUNC_SIG"]
	n0x728c54c32330[label="main"]
	n0x728c54c32bb8[label="LIST_ARG"]
	n0x728c54c32f60[label="int"]
	n0x728c54c337e8[label="="]
	n0x728c54c33578[label="x"]
	n0x728c54c33920[label="t"]
	n0x728c54c34550[label="="]
	n0x728c54c33f38[label="f"]
	n0x728c54c34418[label="CALL"]
	n0x728c54c342e0[label="t"]
	n0x728c54c35528[label="LOOP"]
	n0x728c54c34b68[label="<"]
	n0x728c54c34ca0[label="x"]
	n0x728c54c34f10[label="2"]
	n0x728c54c35798[label="LOOP"]
	n0x728c54c352b8[label="<"]
	n0x728c54c353f0[label="x"]
	n0x728c54c35660[label="3"]
	n0x728c54c358d0[label="LOOP"]
	n0x728c54c35a08[label="<"]
	n0x728c54c35b40[label="t"]
	n0x728c54c35db0[label="2"]

		n0x728c54c35ee8 -> n0x728c54c32a80		// SOURCE -> SOURCE_ITEM
		n0x728c54c32a80 -> n0x728c54c32948		// SOURCE_ITEM -> FUNC_DEF
		n0x728c54c32948 -> n0x728c54c31be0		// FUNC_DEF -> FUNC_SIG
		n0x728c54c31be0 -> n0x728c54c31970		// FUNC_SIG -> alpha
		n0x728c54c31be0 -> n0x728c54c31aa8		// FUNC_SIG -> LIST_ARG
		n0x728c54c31be0 -> n0x728c54c31e50		// FUNC_SIG -> bool
		n0x728c54c32948 -> n0x728c54c326d8		// FUNC_DEF -> =
		n0x728c54c326d8 -> n0x728c54c32468		// = -> x
		n0x728c54c326d8 -> n0x728c54c32810		// = -> 2
		n0x728c54c35ee8 -> n0x728c54c35c78		// SOURCE -> SOURCE_ITEM
		n0x728c54c35c78 -> n0x728c54c34dd8		// SOURCE_ITEM -> FUNC_DEF
		n0x728c54c34dd8 -> n0x728c54c32cf0		// FUNC_DEF -> FUNC_SIG
		n0x728c54c32cf0 -> n0x728c54c32330		// FUNC_SIG -> main
		n0x728c54c32cf0 -> n0x728c54c32bb8		// FUNC_SIG -> LIST_ARG
		n0x728c54c32cf0 -> n0x728c54c32f60		// FUNC_SIG -> int
		n0x728c54c34dd8 -> n0x728c54c337e8		// FUNC_DEF -> =
		n0x728c54c337e8 -> n0x728c54c33578		// = -> x
		n0x728c54c337e8 -> n0x728c54c33920		// = -> t
		n0x728c54c34dd8 -> n0x728c54c34550		// FUNC_DEF -> =
		n0x728c54c34550 -> n0x728c54c33f38		// = -> f
		n0x728c54c34550 -> n0x728c54c34418		// = -> CALL
		n0x728c54c34418 -> n0x728c54c342e0		// CALL -> t
		n0x728c54c34dd8 -> n0x728c54c35528		// FUNC_DEF -> LOOP
		n0x728c54c35528 -> n0x728c54c34b68		// LOOP -> <
		n0x728c54c34b68 -> n0x728c54c34ca0		// < -> x
		n0x728c54c34b68 -> n0x728c54c34f10		// < -> 2
		n0x728c54c35528 -> n0x728c54c35798		// LOOP -> LOOP
		n0x728c54c35798 -> n0x728c54c352b8		// LOOP -> <
		n0x728c54c352b8 -> n0x728c54c353f0		// < -> x
		n0x728c54c352b8 -> n0x728c54c35660		// < -> 3
		n0x728c54c35798 -> n0x728c54c358d0		// LOOP -> LOOP
		n0x728c54c358d0 -> n0x728c54c35a08		// LOOP -> <
		n0x728c54c35a08 -> n0x728c54c35b40		// < -> t
		n0x728c54c35a08 -> n0x728c54c35db0		// < -> 2

}